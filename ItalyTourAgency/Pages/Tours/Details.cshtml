@page "{id}"
@model ItalyTourAgency.Pages_Tours.DetailsModel
@using Microsoft.AspNetCore.Identity
@using ItalyTourAgency.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

<div>
    <h4>Tour</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tour.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tour.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tour.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tour.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tour.Duration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tour.Duration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tour.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tour.Price)
        </dd>
    </dl>
</div>
    <div>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Customer"))
        {
			Console.WriteLine("User is authenticated and is a Customer");
            <a asp-page="/Bookings/CreateBooking" asp-route-tourId="@Model.Tour.Id" class="btn btn-primary">
                Book This Tour
            </a>
        }
        else
            {
            <a asp-area="Identity"
               asp-page="/Account/Login"
               asp-route-returnUrl="@Url.Page("/Bookings/CreateBooking", new { tourId = Model.Tour.Id })"
               class="btn btn-primary">
                Book This Tour
            </a>
            }
            <a asp-page="./Index">Back to List</a>
    </div>
</body>
</html>
